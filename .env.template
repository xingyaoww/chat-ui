# Use .env.local to change these variables
# DO NOT EDIT THIS FILE WITH SENSITIVE DATA

MONGODB_URL=TODO_MONGODB_URL
MONGODB_DB_NAME=CodeActAgent
MONGODB_DIRECT_CONNECTION=false
JUPYTER_API_URL=TODO_JUPYTER_API_URL
N_EXECUTION_LIMIT=5 # Number of turns allowed for LLM's self-execution.


COOKIE_NAME=CodeActAgent
HF_TOKEN=#hf_<token> from from https://huggingface.co/settings/token
HF_API_ROOT=https://api-inference.huggingface.co/models
OPENAI_API_KEY=#your openai api key here

HF_ACCESS_TOKEN=#LEGACY! Use HF_TOKEN instead

# used to activate search with web functionality. disabled if none are defined. choose one of the following:
YDC_API_KEY=#your docs.you.com api key here
SERPER_API_KEY=#your serper.dev api key here
SERPAPI_KEY=#your serpapi key here
SERPSTACK_API_KEY=#your serpstack api key here
USE_LOCAL_WEBSEARCH=#set to true to parse google results yourself, overrides other API keys

WEBSEARCH_ALLOWLIST=`[]` # if it's defined, allow websites from only this list.
WEBSEARCH_BLOCKLIST=`[]` # if it's defined, block websites from this list.

# Parameters to enable open id login
OPENID_CONFIG=`{
  "PROVIDER_URL": "",
  "CLIENT_ID": "",
  "CLIENT_SECRET": "",
  "SCOPES": ""
}`

# /!\ legacy openid settings, prefer the config above
OPENID_CLIENT_ID=
OPENID_CLIENT_SECRET=
OPENID_SCOPES="openid profile" # Add "email" for some providers like Google that do not provide preferred_username
OPENID_PROVIDER_URL=https://huggingface.co # for Google, use https://accounts.google.com
OPENID_TOLERANCE=
OPENID_RESOURCE=

# Parameters to enable a global mTLS context for client fetch requests
USE_CLIENT_CERTIFICATE=false
CERT_PATH=#
KEY_PATH=#
CA_PATH=#
CLIENT_KEY_PASSWORD=#
REJECT_UNAUTHORIZED=false

# 'name', 'userMessageToken', 'assistantMessageToken' are required
MODELS=`[
    {   
        "endpoints": [
          {
            "type" : "openai",
            "baseURL": "http://localhost:8080/v1"
          }
        ],
        "name": "CodeActAgent-Mistral-7b-v0.1",
        "modelUrl": "https://huggingface.co/xingyaoww/CodeActAgent-Mistral-7b-v0.1",
        "websiteUrl": "https://huggingface.co/xingyaoww/CodeActAgent-Mistral-7b-v0.1",

        "userMessageToken": "<|im_start|>user\n",
        "userMessageEndToken": "<|im_end|>",
        "assistantMessageToken": "<|im_start|>assistant\n",
        "assistantMessageEndToken": "<|im_end|>",
        "preprompt": "<|im_start|>system\nA chat between a curious user and an artificial intelligence assistant. The assistant gives helpful, detailed, and polite answers to the user's questions.\nThe assistant can interact with an interactive Python (Jupyter Notebook) environment and receive the corresponding output when needed. The code should be enclosed using \"<execute>\" tag, for example: <execute> print(\"Hello World!\") </execute>.\nThe assistant should attempt fewer things at a time instead of putting too much code in one <execute> block. The assistant can install packages through PIP by <execute> !pip install [package needed] </execute> and should always import packages and define variables before starting to use them.\nThe assistant should stop <execute> and provide an answer when they have already obtained the answer from the execution result. Whenever possible, execute the code for the user using <execute> instead of providing it.\nThe assistant's response should be concise, but do express their thoughts.\n<|im_end|>",
        "parameters": {
          "temperature": 0.5,
          "top_p": 0.95,
          "truncate": 31744,
          "max_new_tokens": 1024,
          "stop": ["<|im_start|>", "<|im_end|>", "</execute>"]
        },
        "promptExamples": [
          {
            "title": "Write an email from bullet list",
            "prompt": "As a restaurant owner, write a professional email to the supplier to get these products every week: \n\n- Wine (x10)\n- Eggs (x24)\n- Bread (x12)"
          }, {
            "title": "Find greatest common factor",
            "prompt": "Find the greatest common factor of 144 and 405."
          }, {
            "title": "Assist in a task",
            "prompt": "How do I make a delicious lemon cheesecake?"
          }
        ]
    }
]`

OLD_MODELS=`[]`# any removed models, `{ name: string, displayName?: string, id?: string }`
TASK_MODEL= # name of the model used for tasks such as summarizing title, creating query, etc.

PUBLIC_ORIGIN=#https://huggingface.co
PUBLIC_SHARE_PREFIX=#https://hf.co/chat
PUBLIC_GOOGLE_ANALYTICS_ID=#G-XXXXXXXX / Leave empty to disable
PUBLIC_ANNOUNCEMENT_BANNERS=`[
    {
    "title": "CodeActAgent is open-sourced now!",
    "linkTitle": "Check it out!",
    "linkHref": "https://huggingface.co/xingyaoww/CodeActAgent-Mistral-7b-v0.1"
  }
]`

PARQUET_EXPORT_DATASET=
PARQUET_EXPORT_HF_TOKEN=
PARQUET_EXPORT_SECRET=

RATE_LIMIT= # requests per minute
MESSAGES_BEFORE_LOGIN=# how many messages a user can send in a conversation before having to login. set to 0 to force login right away

PUBLIC_APP_NAME=CodeActAgent # name used as title throughout the app
PUBLIC_APP_ASSETS=codeact # used to find logos & favicons in static/$PUBLIC_APP_ASSETS
PUBLIC_APP_COLOR=black #blue # can be any of tailwind colors: https://tailwindcss.com/docs/customizing-colors#default-color-palette
PUBLIC_APP_DESCRIPTION="Meet CodeAct Agent: Your versatile open-source LLM that not only chats but also writes and executes Python code for you." # description used throughout the app (if not set, a default one will be used)
PUBLIC_APP_DATA_SHARING=#set to 1 to enable options & text regarding data sharing
PUBLIC_APP_DISCLAIMER=#set to 1 to show a disclaimer on login page
LLM_SUMMERIZATION=true
